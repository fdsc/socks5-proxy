# Пример блокировки по чёрному списку
:new:root

# Передаём управление хосту denieds
# Здесь важно, что блок в call только один. См. алгоритм работы call в example.trusts
:call:denieds
:call:adv

# Если блок denieds не вернул false, и блок adv не вернул false, то разрешаем
:command:accept:0

:end:root


:new:denieds


# d[0:1] означает, что мы берём только первые два уровня домена
# Например, для домена disk.yandex.ru это yandex.ru
# :may:not: означает, что при совпадении результат будет не true, а наоборот - false

# домен vk.com будет заблокирован со всеми его поддоменами
# Так как если будет совпадение, то may заставит блок вернуть false в блок root. И на этом выполнение блока root прервётся

:may:not:exactly:d[0:1]
vk.com


:end:denieds


:new:adv


# d[2:] означает, что мы берём все уровни доменом на вторым уровнем.
# Например, для домена disk.yandex.ru это "disk"
# Для домена webdav.tst.yandex.ru это будет "webdav.tst"

# :may:not: означает, что при совпадении результат возврат из блока будет не true, а наоборот - false
# Это нужно, чтобы прервать выполнение команд в блоке root (чтобы не дойти до разрешающей команды)

# contains означает, что совпадение будет, если указанные ниже команды строки будут содержаться внутри доменного имени
:may:not:contains:d[2:]
banner

# Здесь выражение будет блокироваться по регулярному выражению
# При этом сопоставляться будет не одна строка, а каждый поддомен в отдельности
# Например, для домена webdav.tst.yandex.ru , будет сопоставлены на соответствие с регулярным выражением "adve?^"
# следующие строки: "webdav" и "tst"
:may:not:regex:d[2*]
adve?$

:end:adv
